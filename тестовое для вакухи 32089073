1. Тестирование - часть контроля качества, включающая в себя активности по планированию работ, проектированию тестов, выполнению тестирования и анализу полученных результатов.

2. Дефект (баг) - несоответствие наблюдаемого и ожидаемого поведения ПО (ожидаемое поведение ПО описано в требованиях к ПО).

3. Уровни тестирования: 
	*модульный - один компонент системы тестируется в изоляции от других компонентов;
	*интеграционный - тестируется совместная работа двух и более компонентов системы;
	*системное - тестируется совместная работа всех компонентов системы.

   Виды тестирования:
	*по степени автоматизации:
		1)ручное - тестирование выполняется вручную без использования средств 			  для автоматизации тестирования;
		2)автоматизированное - тестирование выполняется с использованием средств 			  для автоматизации тестирования;

	*по запуску исходного кода на исполнение:
		1)динамическое - тестирование с запуском кода на исполнение;
		2)статическое - тестирование без запуска кода на исполнение;

	*по доступу к коду и архитектуре приложения:
		1) метод "черного ящика" - тестирование производится через пользовательский 			   интерфейс (доступная информация [код и архитектура приложения] 
		   не используется);
		2) метод "белого ящика" - тестирование исходного кода и архитектуры 			   приложения;
		3) метод "серого ящика" - расширение метода "черного ящика", использующее 			   часть исходного кода и архитектуры, полученного с помощью применения 		   специальных средств.

	*по целям и задачам:
		* нефункциональные - проверка нефункциональных особенностей приложения:
			*тестирование интернационализации - проверка готовности продукта к 
			 работе с использованием различных языков с учетом национальных и 				 культурных особенностей страны, в которой предполагается его 				 использование;
			*тестирование локализации - проверка корректности адаптации 				 продукта  к использованию с учетом национальных и культурных 				 особенностей страны, в которой предполагается его использование;
			*инсталляционное тестирование - проверка процесса установки, 				 обновления и удаления ПО;
			*тестирование безопасности - проверка защищенности приложения от 				 скриптов и взлома;
			*тестирование совместимости - проверка возможности приложения 				 работать в указанном окружении;
			**тестирование совместимости - исследование показателей скорости 				  реакции приложения на внешние воздействия при различной по 				  интенсивности и характеру нагрузке:
				*объемное -проверка способности приложения выдержать  					 максимально допустимую для него нагрузку 
				(10 000 или 1 000 000% от возможной) без учета скорости 				 реакции приложения.
				*нагрузочное - проверка способности приложения выдержать 					 допустимую для него нагрузку (до 100%) с учетом скорости 					 реакции приложения.
				*стрессовое - проверка способности приложения выдержать 				 превышающую допустимую для него нагрузку (>100%) с 					 учетом скорости реакции приложения.
			*тестирование на отказ и восстановление - проверка 				 работоспособности приложения после сбоя в программе и/или 				 окружении.
			
		* функциональные - проверка корректности реализации функциональных 			  требований (описывают требуемое поведение продукта в определенных 			  условиях):
			*функциональное - проверка возможностей системы, представляющих 			 ценность для пользователя;
			*тестирование взаимодейтсвия - проверка возможности системы 				 действовать совместно с использованием внешних сервисов.

4. Тест-кейс состоит из:
	 *на этапе планирования:
	1)наименование проверки, ее цель.
	2)предусловия (необходимые для проведения проверки сведения [например, наличие 		  зарегистрированного пользователя в системе])
	3)инструкции, необходимые для воспроизведения ожидаемого результата.
	4)ожидаемый результат - результат, описанный в требованиях к продукту.\
	 *на этапе выполнения:
	то же самое +
	5)актуальный результат - результат, полученный с помощью инструкций.
	***не всегда бывают постусловия (для вывода в исходное положение приложения)
	6)если актуальный результат совпадает с ожидаемым - тест-кейс считается пройденным, 		  иначе провален.

5. Тест-кейс расписывает КАК нужно проверить реализацию того или иного требования.
Чек-лист описывает ЧТО нужно проверить БЕЗ подробных инструкций о том, КАК это делать.
слайд 2:

1. Метод черного ящика не предполагает использования сведений о коде и архитектуре приложения (даже при их наличии).
Метод белого ящика не затрагивает пользовательский интерфейс и использует исключительно код и архитектуру тестируемого приложения. 

2. Регресс – это движение назад, ухудшение работы системы. Со временем любая сложная система может дать сбой – в том числе на неожиданных и труднодоступных участках.

Регресс - тестирование - полное или частичное тестирование ПО после внесения ЛЮБЫХ изменений в ПО и/или его окружение с целью убедиться, что старый и новый функционал работает (неполнота связана с ограниченностью человеческих, временных и/или финансовых ресурсов).

Смоук-тестирование - тестирование, направленное на проверку работоспособности базового функционала скомпилированного билда (например: запуск, обновление системы, авторизация, регистрация), без работы которого дальнейшее тестирование ПО является невозможным.



Слайд 3

1. 	Требования: 
		*кофе-машина работает от сети с напряжением 220в;
		*на верхней части кофемашины находится сенсорный экран, на котором 			 установлено приложение для сбора и передачи заказов кофемашине;
		*в кофемашину встроено устройство для выдачи стаканчиков;
		*все стаканчики имеют объем 250 мл;
		*к заказу доступен только напиток "американо" объемом 250 мл;
		*кофе-машина принимает заказ с помощью графического пользовательского 			 интерфейса;
		*после нажатия на иконку с изображением напитка кофемашина принимает заказ;
		*после получения заказа кофемашина начинает готовить выбранный напиток;
		*во время приготовления напитка кофемашина выдает стаканчик под отверстие, 			 через которое выдается приготовленный напиток;
		*после выдачи напитка в стаканчик кофемашина выдает деревянную палочку для 			 перемешивания компонентов напитка.

	тест-кейс(на этапе планирования):
	Наименование проверки: приготовление "американо" на кофемашине
	Предусловие: кофемашина подключена к сети с напряжением 220в.
	Инструкция: 1. нажать в приложении кофемашины на иконку "американо";
	Ожидаемый результат: кофемашина приготовила напиток "американо" объемом 250 мл.


2. Есть web-форма(где находится?) с текстовым полем(обязательным?) для ввода Фамилии и сохранением ее в БД(как фамилия сохраняется в БД?). Первая буква
обязательно должна быть заглавная(какие буквы могут быть после заглавной?), можно вводить только русские символы(какие символы считаются русскими?), кол-во символов(минимальное, максимальное количество символов?) 30 (включительно?).

Чек-лист:
Номер		Проверка
___________________________
1		пустое поле
2		текст на кириллице
3		текст в верхнем регистре
4		текст в нижнем регистре
5		текст в верхнем и нижнем регистрах
6		спец. символы: ~`!@#$%^&*()_+?:"{}[];’
7		цифры
8		ввод 29 символов
9		ввод 30 символов
10		ввод 31 символа
11		пробелы
12		строка, начинающаяся и заканчивающаяся с пробелов

слайд 4
Вводные данные:
Table1 (field1, field2, field3, field4)


1) Вывести уникальные значения поля field4

SELECT field4 FROM table1 
GROUP BY field4 
HAVING COUNT(*)=1;

2)Сколько записей в table1, у которых field3<200

SELECT COUNT(*) as count FROM table1 
WHERE field3<200;

3)Вывести все записи, у которых field3 имеет значения 3,7,8 и 225

SELECT * FROM table1 
WHERE field3=3 
OR field3=7 
OR field3=8 
OR field3=225;

4)Вывести все записи, у которых поле field4 имеет значения в диапазоне между 5 и 15

SELECT * FROM table1 
WHERE field4>=5 
AND field4<=15;

5)Изменить значения поля Field4 на 55, где field1 = 10

UPDATE table1 SET field4=55 
WHERE field1=10;

6)Вводные данные:
Table1 (field1.1, field1.2, field1.3, field1.4)
Table2 (field2.1, field2.2, field2.3, field2.4)

Вывести строки (только field1.2, field1.3) из таблицы Table1,
для которых field1.1 = field2.1 , где field2.3 = 33 и field2.4 = 44


SELECT field1.2, field1.3 FROM table1 
JOIN table2 ON field1.1=field2.1 
WHERE field2.3=33 AND field2.4=44;
